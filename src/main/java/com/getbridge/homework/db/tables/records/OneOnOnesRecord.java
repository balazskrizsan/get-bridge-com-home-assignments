/*
 * This file is generated by jOOQ.
 */
package com.getbridge.homework.db.tables.records;


import com.getbridge.homework.db.tables.OneOnOnes;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OneOnOnesRecord extends UpdatableRecordImpl<OneOnOnesRecord> implements Record7<Long, String, String, LocalDateTime, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.one_on_ones.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.one_on_ones.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.one_on_ones.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.one_on_ones.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.one_on_ones.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.one_on_ones.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.one_on_ones.planned_date</code>.
     */
    public void setPlannedDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.one_on_ones.planned_date</code>.
     */
    public LocalDateTime getPlannedDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.one_on_ones.location</code>.
     */
    public void setLocation(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.one_on_ones.location</code>.
     */
    public String getLocation() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.one_on_ones.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.one_on_ones.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.one_on_ones.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.one_on_ones.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, LocalDateTime, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, LocalDateTime, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return OneOnOnes.ONE_ON_ONES.ID;
    }

    @Override
    public Field<String> field2() {
        return OneOnOnes.ONE_ON_ONES.TITLE;
    }

    @Override
    public Field<String> field3() {
        return OneOnOnes.ONE_ON_ONES.DESCRIPTION;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return OneOnOnes.ONE_ON_ONES.PLANNED_DATE;
    }

    @Override
    public Field<String> field5() {
        return OneOnOnes.ONE_ON_ONES.LOCATION;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return OneOnOnes.ONE_ON_ONES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return OneOnOnes.ONE_ON_ONES.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public LocalDateTime component4() {
        return getPlannedDate();
    }

    @Override
    public String component5() {
        return getLocation();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public LocalDateTime value4() {
        return getPlannedDate();
    }

    @Override
    public String value5() {
        return getLocation();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public OneOnOnesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public OneOnOnesRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public OneOnOnesRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public OneOnOnesRecord value4(LocalDateTime value) {
        setPlannedDate(value);
        return this;
    }

    @Override
    public OneOnOnesRecord value5(String value) {
        setLocation(value);
        return this;
    }

    @Override
    public OneOnOnesRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public OneOnOnesRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public OneOnOnesRecord values(Long value1, String value2, String value3, LocalDateTime value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OneOnOnesRecord
     */
    public OneOnOnesRecord() {
        super(OneOnOnes.ONE_ON_ONES);
    }

    /**
     * Create a detached, initialised OneOnOnesRecord
     */
    public OneOnOnesRecord(Long id, String title, String description, LocalDateTime plannedDate, String location, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(OneOnOnes.ONE_ON_ONES);

        setId(id);
        setTitle(title);
        setDescription(description);
        setPlannedDate(plannedDate);
        setLocation(location);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
