/*
 * This file is generated by jOOQ.
 */
package com.getbridge.homework.db.tables.records;


import com.getbridge.homework.db.tables.Participants;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParticipantsRecord extends UpdatableRecordImpl<ParticipantsRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.participants.one_on_ones_id</code>.
     */
    public void setOneOnOnesId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.participants.one_on_ones_id</code>.
     */
    public Long getOneOnOnesId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.participants.employee_id</code>.
     */
    public void setEmployeeId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.participants.employee_id</code>.
     */
    public Long getEmployeeId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Participants.PARTICIPANTS.ONE_ON_ONES_ID;
    }

    @Override
    public Field<Long> field2() {
        return Participants.PARTICIPANTS.EMPLOYEE_ID;
    }

    @Override
    public Long component1() {
        return getOneOnOnesId();
    }

    @Override
    public Long component2() {
        return getEmployeeId();
    }

    @Override
    public Long value1() {
        return getOneOnOnesId();
    }

    @Override
    public Long value2() {
        return getEmployeeId();
    }

    @Override
    public ParticipantsRecord value1(Long value) {
        setOneOnOnesId(value);
        return this;
    }

    @Override
    public ParticipantsRecord value2(Long value) {
        setEmployeeId(value);
        return this;
    }

    @Override
    public ParticipantsRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParticipantsRecord
     */
    public ParticipantsRecord() {
        super(Participants.PARTICIPANTS);
    }

    /**
     * Create a detached, initialised ParticipantsRecord
     */
    public ParticipantsRecord(Long oneOnOnesId, Long employeeId) {
        super(Participants.PARTICIPANTS);

        setOneOnOnesId(oneOnOnesId);
        setEmployeeId(employeeId);
    }
}
